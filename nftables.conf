#!/usr/sbin/nft -f

# 清除残存的所有规则
flush ruleset

# ---预定义参数 Start---


# 要暴露到公网的TCP端口，所有人都可以访问。
# 如果不需要暴露，请在 ip protocol tcp tcp dport $public_tcp_ports accept 前加上 # 注释掉它，此处{ }内为空会启用失败
define public_tcp_ports = { 5201 }

# 要暴露到公网的UDP端口，所有人都可以访问。
# 如果不需要暴露，请在 ip protocol udp udp dport $public_tcp_ports accept 前加上 # 注释掉它，此处{ }内为空会启用失败
define public_udp_ports = { 5201 }

# 要暴露到私网的TCP和UDP端口，私网地址用户可访问。
# 建议平时所需要的TCP和UDP端口都可以写在这里
define private_tcp_ports = { 22, 53, 111, 445, 5666, 5667 }
define private_udp_ports = { 53, 67, 68 }

# 当你的飞牛NAS需要作为网关时可以使用，例如：作为VPN服务器转发数据，或作为虚拟机的网关。{ }内填写外网网卡接口名，私网网卡不需要填写。
# 默认不启用，需要的话请取消 # oif $snat_interfaces masquerade 前的#
define snat_interfaces = { eth0, eth1 }


# ---预定义参数 End---

# 引用配置文件
include "/etc/nftables/sx_ip.conf"
include "/etc/nftables/private_ip.conf"

table inet inet_filter {

        chain inet_input {
                type filter hook input priority 0 ; policy drop ;

                # 放行已建立的连接和连接相关的连接
                ct state { established, related } accept

                # 放行本机服务，如相册，影视等
                iif "lo" accept

		# 放行源地址为私网地址，目的端口为预定于端口的流量 
		ip saddr @private_ip ip protocol tcp tcp dport $private_tcp_ports accept
		ip saddr @private_ip ip protocol udp udp dport $private_udp_ports accept

		# 放行源地址为私网地址的icmp请求
		ip saddr @private_ip ip protocol icmp accept

		# 放行所有IP的预定义TCP和UDP端口
		ip protocol tcp tcp dport $public_tcp_ports accept
                ip protocol udp udp dport $public_udp_ports accept

        }

        chain inet_output {
                type filter hook output priority 0 ; policy accept ;

		# 放行已建立的连接和连接相关的连接
                ct state { established, related } accept
        }

        chain inet_forward {
                type filter hook forward priority 0 ; policy accept ;

		# 放行已建立的连接和连接相关的连接
                ct state { established, related }  accept

        }

        chain postrouting {
               type nat hook postrouting priority 100; policy accept;

		# 需要进行源地址转换的出方向网卡接口
               # oif $snat_interfaces masquerade

		# 放行已建立的连接和连接相关的连接
               ct state { established, related } accept
}
}
